# Pre-commit hooks configuration
# https://pre-commit.com/
# Purpose: Automatically run linting and formatting tools before each commit

repos:
  # General file quality hooks
  # Purpose: Catch common file issues and ensure basic quality standards
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: '\.md$'  # Allow trailing spaces in Markdown (used for line breaks)
      - id: end-of-file-fixer  # Ensure files end with newline
      - id: check-yaml
        args: ['--unsafe']  # Allow unsafe YAML (needed for some Docker Compose files)
      - id: check-json  # Validate JSON syntax
      - id: check-toml  # Validate TOML syntax
      - id: check-merge-conflict  # Detect merge conflict markers
      - id: check-added-large-files
        args: ['--maxkb=1000']  # Prevent accidentally committing large files
      - id: check-case-conflict  # Detect case conflicts in filenames
      - id: debug-statements  # Detect debug statements (print, pdb, etc.)
      - id: detect-private-key  # Detect private keys in commits

  # Python code formatting and linting
  # Purpose: Ensure consistent Python code style and catch common issues
  - repo: https://github.com/psf/black
    rev: 24.1.1
    hooks:
      - id: black
        language_version: python3.11  # Use Python 3.11 for formatting
        args: ['--line-length=88']  # Match our Black configuration

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile', 'black', '--line-length', '88']  # Match our isort configuration

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.8
    hooks:
      - id: ruff
        args: ['--fix', '--exit-non-zero-on-fix']  # Fix auto-fixable issues and fail on others
      - id: ruff-format  # Format code with ruff (alternative to Black)

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-all]  # Install type stubs for better checking
        args: ['--ignore-missing-imports']  # Ignore missing imports (common with external packages)

  # YAML file linting
  # Purpose: Ensure YAML files are properly formatted and follow best practices
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: ['-c', '.yamllint']  # Use our custom yamllint configuration

  # Markdown file linting
  # Purpose: Ensure Markdown files are properly formatted and follow best practices
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.37.0
    hooks:
      - id: markdownlint
        args: ['--config', '.markdownlint.yaml']  # Use our custom markdownlint configuration

  # Dockerfile linting
  # Purpose: Ensure Dockerfiles follow best practices and security guidelines
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        args: ['--config', '.hadolint.yaml']  # Use our custom hadolint configuration

  # Makefile linting
  # Purpose: Ensure Makefiles follow best practices and are properly formatted
  - repo: https://github.com/checkmake/checkmake
    rev: v0.2.2
    hooks:
      - id: checkmake
        args: ['--config', '.checkmake.yaml']  # Use our custom checkmake configuration

# Global configuration
default_language_version:
  python: python3.11  # Use Python 3.11 as the default language version

# Exclude patterns
# Purpose: Skip linting for generated files, caches, and other non-source files
exclude: |
  (?x)^(
    \.git/.*|          # Git internal files
    \.venv/.*|         # Python virtual environment
    \.eggs/.*|         # Python egg cache
    build/.*|          # Build artifacts
    dist/.*|           # Distribution artifacts
    \.mypy_cache/.*|   # MyPy cache
    \.pytest_cache/.*| # Pytest cache
    __pycache__/.*|    # Python bytecode cache
    \.ruff_cache/.*|   # Ruff cache
    htmlcov/.*|        # Coverage HTML reports
    \.coverage.*|      # Coverage data files
    coverage\.xml|     # Coverage XML reports
    \.tox/.*|          # Tox cache
    \.env.*|           # Environment files
    node_modules/.*    # Node.js dependencies
  )$
