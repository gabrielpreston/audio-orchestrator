# CI-specific Docker Compose overrides
# Optimized for build speed over runtime performance
version: "3.8"

services:
  discord:
    build:
      context: "."
      dockerfile: "services/discord/Dockerfile"
      cache_from:
        - type=gha,scope=services
        - ghcr.io/gabrielpreston/python-audio:latest
        - ghcr.io/gabrielpreston/discord:latest
      args:
        BUILDKIT_INLINE_CACHE: "1"
    image: "ghcr.io/gabrielpreston/discord:latest"
    # Disable unnecessary ports in CI
    ports: []
    # Use minimal environment for CI
    environment:
      - PYTHONPATH=/app
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    # Disable restart policy in CI
    restart: "no"
    # Use minimal logging
    logging:
      driver: "none"
    # CI-specific health checks for faster startup detection
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "/app/scripts/health_check.py",
          "http://localhost:8001/health/ready",
          "--timeout",
          "3",
        ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 20s

  stt:
    build:
      context: "."
      dockerfile: "services/stt/Dockerfile"
      cache_from:
        - type=gha,scope=services
        - ghcr.io/gabrielpreston/python-ml:latest
        - ghcr.io/gabrielpreston/stt:latest
      args:
        BUILDKIT_INLINE_CACHE: "1"
    image: "ghcr.io/gabrielpreston/stt:latest"
    ports: []
    environment:
      - PYTHONPATH=/app
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    restart: "no"
    logging:
      driver: "none"
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "/app/scripts/health_check.py",
          "http://localhost:9000/health/ready",
          "--timeout",
          "3",
        ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 20s

  llm:
    build:
      context: "."
      dockerfile: "services/llm/Dockerfile"
      cache_from:
        - type=gha,scope=services
        - ghcr.io/gabrielpreston/python-ml:latest
        - ghcr.io/gabrielpreston/llm:latest
      args:
        BUILDKIT_INLINE_CACHE: "1"
    image: "ghcr.io/gabrielpreston/llm:latest"
    ports: []
    environment:
      - PYTHONPATH=/app
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    restart: "no"
    logging:
      driver: "none"
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "/app/scripts/health_check.py",
          "http://localhost:8000/health/ready",
          "--timeout",
          "3",
        ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 20s

  orchestrator:
    build:
      context: "."
      dockerfile: "services/orchestrator/Dockerfile"
      cache_from:
        - type=gha,scope=services
        - ghcr.io/gabrielpreston/python-ml:latest
        - ghcr.io/gabrielpreston/orchestrator:latest
      args:
        BUILDKIT_INLINE_CACHE: "1"
    image: "ghcr.io/gabrielpreston/orchestrator:latest"
    ports: []
    environment:
      - PYTHONPATH=/app
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    restart: "no"
    logging:
      driver: "none"
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "/app/scripts/health_check.py",
          "http://localhost:8000/health/ready",
          "--timeout",
          "3",
        ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 20s

  tts:
    build:
      context: "."
      dockerfile: "services/tts/Dockerfile"
      cache_from:
        - type=gha,scope=services
        - ghcr.io/gabrielpreston/python-ml:latest
        - ghcr.io/gabrielpreston/tts:latest
      args:
        BUILDKIT_INLINE_CACHE: "1"
    image: "ghcr.io/gabrielpreston/tts:latest"
    ports: []
    environment:
      - PYTHONPATH=/app
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    restart: "no"
    logging:
      driver: "none"
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "/app/scripts/health_check.py",
          "http://localhost:7000/health/ready",
          "--timeout",
          "3",
        ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 20s
