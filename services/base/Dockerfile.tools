# Tools Base Image
# Linter/tester base with all development tools
ARG BASE_IMAGE=ghcr.io/gabrielpreston/python-base:latest
FROM ${BASE_IMAGE} AS base

ENV DEBIAN_FRONTEND=noninteractive \
    GO_VERSION=1.25.2 \
    PATH="/usr/local/go/bin:${PATH}" \
    GOBIN=/usr/local/bin

# Install additional system dependencies for tools
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    gnupg=* \
    make=* \
    nodejs=* \
    npm=* \
    cmake=* \
    ffmpeg=* \
    libavcodec-dev=* \
    libavdevice-dev=* \
    libavfilter-dev=* \
    libavformat-dev=* \
    libavutil-dev=* \
    libcurl4-openssl-dev=* \
    libffi-dev=* \
    libgomp1=* \
    libopenblas-dev=* \
    libopus0=* \
    libsndfile1=* \
    libsodium-dev=* \
    ninja-build=* \
    pkg-config=* \
    python3-dev=* \
    wget=* && \
    rm -rf /var/lib/apt/lists/*

# Install Go
RUN curl -fsSL "https://go.dev/dl/go${GO_VERSION}.linux-amd64.tar.gz" \
    | tar -C /usr/local -xz

# Install Node.js (single installation)
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y --no-install-recommends --allow-downgrades nodejs=18.* && \
    rm -rf /var/lib/apt/lists/*

# Install Rust (minimal profile for faster builds)
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable --profile minimal
RUN /root/.cargo/bin/rustup default stable

# Install Go tools
ENV GOPATH=/go
ENV PATH=$GOPATH/bin:/usr/local/go/bin:$PATH

# Copy only essential requirements files for linter and tester
COPY services/requirements-base.txt /workspace/requirements-base.txt
COPY services/requirements-dev.txt /workspace/requirements-dev.txt
COPY services/requirements-test.txt /workspace/requirements-test.txt
COPY services/linter/requirements.txt /workspace/services/linter/requirements.txt
COPY services/tester/requirements.txt /workspace/services/tester/requirements.txt

# Create symlinks so service requirements can find the base files
RUN ln -s /workspace/requirements-base.txt /workspace/services/requirements-base.txt && \
    ln -s /workspace/requirements-dev.txt /workspace/services/requirements-dev.txt && \
    ln -s /workspace/requirements-test.txt /workspace/services/requirements-test.txt

# Install Python dependencies in separate layers for better caching
RUN --mount=type=cache,target=/root/.cache/pip \
    python -m pip install --upgrade pip==24.0 && \
    pip install -r /workspace/requirements-base.txt

RUN --mount=type=cache,target=/root/.cache/pip \
    pip install -r /workspace/requirements-dev.txt && \
    pip install -r /workspace/requirements-test.txt

RUN --mount=type=cache,target=/root/.cache/pip \
    pip install -r /workspace/services/linter/requirements.txt && \
    pip install -r /workspace/services/tester/requirements.txt

# Install Node.js tools
RUN npm install -g markdownlint-cli@0.39.0

# Install hadolint
RUN curl -sSL https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64 \
    -o /usr/local/bin/hadolint && \
    chmod +x /usr/local/bin/hadolint

# Install checkmake
RUN go install github.com/checkmake/checkmake/cmd/checkmake@latest

# Install actionlint for GitHub Actions workflow validation
RUN go install github.com/rhysd/actionlint/cmd/actionlint@latest

# Copy tool scripts
COPY services/linter/run-lint.sh /usr/local/bin/run-lint.sh
COPY services/tester/run-tests.sh /usr/local/bin/run-tests.sh
RUN chmod +x /usr/local/bin/run-lint.sh /usr/local/bin/run-tests.sh

WORKDIR /workspace
