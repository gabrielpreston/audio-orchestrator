# Test-specific Docker Compose configuration
# Optimized for integration testing with fast startup and isolated network

networks:
  test-network:
    driver: bridge
    name: audio-orchestrator-test

services:
  audio:
    extends:
      file: docker-compose.yml
      service: audio
    networks:
      - test-network
    environment:
      - LOG_LEVEL=INFO

  stt:
    extends:
      file: docker-compose.yml
      service: stt
    networks:
      - test-network
    environment:
      - FW_MODEL=tiny # Fast model for tests
      - LOG_LEVEL=INFO
    volumes:
      - ./services/tests/fixtures:/app/test-fixtures:ro

  bark:
    extends:
      file: docker-compose.yml
      service: bark
    networks:
      - test-network
    environment:
      - LOG_LEVEL=INFO
      - TTS_AUTH_TOKEN=test-token
    volumes:
      - ./services/tests/fixtures:/app/test-fixtures:ro

  flan:
    extends:
      file: docker-compose.yml
      service: flan
    networks:
      - test-network
    environment:
      - LOG_LEVEL=INFO
      - LLM_AUTH_TOKEN=test-token

  orchestrator:
    extends:
      file: docker-compose.yml
      service: orchestrator
    networks:
      - test-network
    environment:
      - LOG_LEVEL=INFO
      - LLM_AUTH_TOKEN=test-token
      - TTS_AUTH_TOKEN=test-token

  # Discord service for E2E tests (optional, requires token)
  discord:
    build:
      context: .
      dockerfile: services/discord/Dockerfile
    networks:
      - test-network
    ports:
      - "8001:8001" # Discord HTTP API port
    environment:
      - DISCORD_TOKEN=${DISCORD_TOKEN:-dummy-token-for-testing}
      - DISCORD_FULL_BOT=false # HTTP mode by default (correct env var name)
      - DISCORD_GUILD_ID=123456789
      - DISCORD_VOICE_CHANNEL_ID=987654321
      - STT_BASE_URL=http://stt:9000
      - ORCHESTRATOR_BASE_URL=http://orchestrator:8200
      - LOG_LEVEL=INFO
