# Workflow: Main CI (Orchestrator)
# Purpose: Orchestrate change detection and route to specialized workflows
name: "Main CI"
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch: {}

permissions:
  contents: "read"
  pull-requests: "read"
  packages: "write"

concurrency:
  group: "ci-${{ github.ref }}"
  cancel-in-progress: true

env:
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_PYTHON_VERSION_WARNING: "1"
  PYTHONDONTWRITEBYTECODE: "1"

jobs:
  changes:
    name: "Detect affected areas"
    runs-on: "ubuntu-latest"
    environment: "discord-voice-lab"
    outputs:
      python: "${{ steps.filter.outputs.python }}"
      docker: "${{ steps.filter.outputs.docker }}"
      docs: "${{ steps.filter.outputs.docs }}"
      security-deps: "${{ steps.filter.outputs.security-deps }}"
      base: "${{ steps.filter.outputs.base }}"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v4.2.2"
        with:
          fetch-depth: 2
      - name: "Filter paths"
        id: "filter"
        uses: "dorny/paths-filter@v3"
        with:
          filters: |
            python:
              - 'services/**/*.py'
              - 'pyproject.toml'
            docker:
              - 'docker-compose.yml'
              - 'services/**/Dockerfile'
            docs:
              - 'README.md'
              - 'docs/**'
              - 'AGENTS.md'
            security-deps:
              - 'requirements-*.txt'
              - 'services/**/requirements.txt'
            base:
              - 'services/base/**'
              - 'requirements-base.txt'
      - name: "Generate enhanced change detection report"
        run: |
          echo "## 🔍 Change Detection Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Manual trigger detection
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "### 🚀 Manual Workflow Trigger" >> $GITHUB_STEP_SUMMARY
            echo "**Triggered by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
            echo "**Triggered at:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
            echo "**Reason:** Full CI validation requested" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          else
            echo "### 🔄 Automatic Trigger" >> $GITHUB_STEP_SUMMARY
            echo "**Triggered by:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
            echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi

          # Visual job flow map
          echo "### 🗺️ Expected Job Flow" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`mermaid" >> $GITHUB_STEP_SUMMARY
          echo "graph TD" >> $GITHUB_STEP_SUMMARY
          echo "    A[🔍 Change Detection] --> B{Changes Detected?}" >> $GITHUB_STEP_SUMMARY
          echo "    B -->|Yes| C[📊 Generate Report]" >> $GITHUB_STEP_SUMMARY
          echo "    B -->|No| D[⏭️ Skip All Workflows]" >> $GITHUB_STEP_SUMMARY
          echo "    C --> E[🐳 Docker CI]" >> $GITHUB_STEP_SUMMARY
          echo "    C --> F[📚 Docs CI]" >> $GITHUB_STEP_SUMMARY
          echo "    C --> G[🔒 Security CI]" >> $GITHUB_STEP_SUMMARY
          echo "    E --> H[🐍 Core CI]" >> $GITHUB_STEP_SUMMARY
          echo "    F --> I[✅ All Complete]" >> $GITHUB_STEP_SUMMARY
          echo "    G --> I" >> $GITHUB_STEP_SUMMARY
          echo "    H --> I" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Change detection results
          echo "### 📊 Detected Changes" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status | Workflow |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|--------|----------|" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.filter.outputs.python }}" = "true" ] || [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "| 🐍 Python Code | ✅ Active | Core CI |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 🐍 Python Code | ⏭️ Skipped | - |" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ steps.filter.outputs.docker }}" = "true" ] || [ "${{ steps.filter.outputs.base }}" = "true" ] || [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "| 🐳 Docker/Base | ✅ Active | Docker CI |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 🐳 Docker/Base | ⏭️ Skipped | - |" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ steps.filter.outputs.docs }}" = "true" ] || [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "| 📚 Documentation | ✅ Active | Docs CI |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 📚 Documentation | ⏭️ Skipped | - |" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ steps.filter.outputs.security-deps }}" = "true" ] || [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "| 🔒 Security Deps | ✅ Active | Security CI |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 🔒 Security Deps | ⏭️ Skipped | - |" >> $GITHUB_STEP_SUMMARY
          fi

  core-ci:
    needs: ["changes", "docker-ci"]
    if: |
      (needs.changes.outputs.python == 'true' || github.event_name == 'workflow_dispatch') &&
      (needs.docker-ci.result == 'success' || needs.docker-ci.result == 'skipped')
    uses: ./.github/workflows/core-ci.yaml
    with:
      python-changes: ${{ needs.changes.outputs.python == 'true' }}

  docker-ci:
    needs: ["changes"]
    if: |
      needs.changes.outputs.docker == 'true' ||
      needs.changes.outputs.base == 'true' ||
      github.event_name == 'workflow_dispatch'
    uses: ./.github/workflows/docker-ci.yaml
    with:
      docker-changes: ${{ needs.changes.outputs.docker == 'true' }}
      base-changes: ${{ needs.changes.outputs.base == 'true' }}

  docs-ci:
    needs: ["changes"]
    if: needs.changes.outputs.docs == 'true' || github.event_name == 'workflow_dispatch'
    uses: ./.github/workflows/docs-ci.yaml

  security-ci:
    needs: ["changes", "docker-ci"]
    if: |
      (needs.changes.outputs.security-deps == 'true' || github.event_name == 'workflow_dispatch') &&
      (needs.docker-ci.result == 'success' || needs.docker-ci.result == 'skipped')
    uses: ./.github/workflows/security-ci.yaml

  workflow-status:
    needs: ["core-ci", "docker-ci", "docs-ci", "security-ci"]
    if: ${{ !cancelled() }}
    runs-on: "ubuntu-latest"
    steps:
      - name: "Report workflow status"
        run: |
          echo "## Workflow Status" >> $GITHUB_STEP_SUMMARY
          echo "- Core CI: ${{ needs.core-ci.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Docker CI: ${{ needs.docker-ci.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Docs CI: ${{ needs.docs-ci.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Security CI: ${{ needs.security-ci.result }}" >> $GITHUB_STEP_SUMMARY
