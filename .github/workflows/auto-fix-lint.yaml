name: Auto-Fix Lint Issues

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  auto-fix:
    name: Auto-fix lint issues
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'failure' ||
      github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install black isort ruff mypy yamllint
      
      - name: Install additional tools
        run: |
          # Install Hadolint
          curl -sSL https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64 -o /usr/local/bin/hadolint
          chmod +x /usr/local/bin/hadolint
          
          # Install Checkmake
          go install github.com/checkmake/checkmake/cmd/checkmake@latest
          echo "${HOME}/go/bin" >> $GITHUB_PATH
          
          # Install Markdownlint
          npm install -g markdownlint-cli
      
      - name: Apply auto-fixes
        run: |
          echo "Applying auto-fixes..."
          
          # Python formatting
          black services/ || true
          isort services/ || true
          ruff check --fix services/ || true
          
          # Docker files
          hadolint services/*/Dockerfile || true
          
          # YAML files
          yamllint docker-compose.yml || true
          
          # Markdown files
          markdownlint README.md AGENTS.md docs/**/*.md || true
          
          # Makefile
          checkmake Makefile || true
      
      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes to commit"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected, will commit"
          fi
      
      - name: Commit fixes
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "fix: apply auto-fixes for linting issues

          - Applied black formatting
          - Applied isort import sorting  
          - Applied ruff fixes
          - Applied other linting fixes

          Auto-generated by GitHub Actions"
          git push